name: Automated Content Pipeline
on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      topic:
        description: 'Topic to research and generate content for'
        required: false
        type: string

  # Weekly schedule (Mondays at 9 AM UTC)
  schedule:
    - cron: '0 9 * * 1'

jobs:
  discover-topics:
    runs-on: ubuntu-latest
    outputs:
      topics: ${{ steps.discover.outputs.topics }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd content-generator
          npm install

      - name: Discover trending topics
        id: discover
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        run: |
          cd content-generator
          node discover-topics.js > topics.json
          echo "topics=$(cat topics.json)" >> $GITHUB_OUTPUT

  research-and-generate:
    needs: discover-topics
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        topic: ${{ fromJson(needs.discover-topics.outputs.topics || '["AI SEO strategies 2025"]') }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd content-generator
          npm install

      - name: Research topic
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
          DATAFORSEO_API_LOGIN: ${{ secrets.DATAFORSEO_API_LOGIN }}
          DATAFORSEO_API_PASSWORD: ${{ secrets.DATAFORSEO_API_PASSWORD }}
        run: |
          cd content-generator
          node analyze-topic.js "${{ matrix.topic }}"

      - name: Generate content
        run: |
          cd content-generator
          node generate-content.js --topic "${{ matrix.topic }}" --auto

      - name: Create page file
        run: |
          cd content-generator
          node create-page.js "${{ matrix.topic }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: generated-content
          path: |
            src/pages/blog/*.astro
            content-generator/generated-content/*.md
            content-generator/analysis-reports/*.json

  create-pr:
    needs: research-and-generate
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: generated-content

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'feat: Add new AI-generated content'
          title: 'üöÄ New Content Generated - ${{ github.run_id }}'
          body: |
            ## üìù New Content Generated

            This PR contains automatically generated content based on:
            - Reddit user insights
            - SERP analysis
            - Content gap identification

            ### Topics Covered:
            - Check the files changed tab for details

            ### Review Checklist:
            - [ ] Content is factually accurate
            - [ ] No sensitive information included
            - [ ] Meta tags are optimized
            - [ ] Internal links added where appropriate
            - [ ] Images have alt text

            ### Metrics:
            - Questions answered: Check analysis reports
            - Gaps filled: See content analyzer output
            - Keywords targeted: Review meta tags

            ---
            *Generated by Automated Content Pipeline*
          branch: content-pipeline-${{ github.run_id }}
          delete-branch: true

  monitor-performance:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Check content performance
        run: |
          cd content-generator
          node check-performance.js

      - name: Send performance report
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Weekly Content Pipeline Report
          to: dave@daveshap.com
          from: Content Pipeline
          body: |
            Weekly content generation report attached.

            Check the GitHub Actions logs for details.
          attachments: content-generator/reports/*.json