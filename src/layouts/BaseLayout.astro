---
import { ViewTransitions } from 'astro:transitions';
import StructuredData from '../components/StructuredData.astro';
import PerfMonitor from '../components/PerfMonitor.astro';

// Import styles with ?inline to control loading
import globalStyles from '../styles/global-complete.css?inline';
import mobileStyles from '../styles/mobile-optimizations.css?inline';
import premiumStyles from '../styles/premium-effects.css?inline';

export interface Props {
  title: string;
  description: string;
  image?: string;
  schemaType?: 'website' | 'article' | 'service' | 'person';
  datePublished?: string;
  dateModified?: string;
  serviceName?: string;
  priceRange?: string;
}

const { 
  title, 
  description, 
  image = '/images/dave-rooftop.webp',
  schemaType = 'website',
  datePublished,
  dateModified,
  serviceName,
  priceRange
} = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="en">
<head>
  <!-- Essential Meta -->
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title}</title>
  <meta name="description" content={description}>
  <link rel="canonical" href={canonicalURL}>
  
  <!-- DNS Prefetch & Preconnect for performance -->
  <link rel="dns-prefetch" href="https://fonts.googleapis.com">
  <link rel="dns-prefetch" href="https://www.googletagmanager.com">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

  <!-- Optimized Font Loading with font-display: swap -->
  <link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" as="style">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet" media="print" onload="this.media='all'">
  <noscript><link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet"></noscript>
  
  <!-- Favicon -->
  <link rel="icon" href="/favicon.svg" type="image/svg+xml">
  <link rel="icon" href="/favicon.ico" sizes="any">
  <link rel="apple-touch-icon" href={image}>
  
  <!-- Open Graph -->
  <meta property="og:type" content="website">
  <meta property="og:url" content={canonicalURL}>
  <meta property="og:title" content={title}>
  <meta property="og:description" content={description}>
  <meta property="og:image" content={new URL(image, Astro.site)}>
  <meta property="og:site_name" content="Dave Shapiro SEO Expert">
  
  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:title" content={title}>
  <meta name="twitter:description" content={description}>
  <meta name="twitter:image" content={new URL(image, Astro.site)}>

  <!-- View Transitions for smooth navigation -->
  <ViewTransitions />
  
  <!-- Structured Data / Schema.org -->
  <StructuredData
    type={schemaType}
    title={title}
    description={description}
    url={canonicalURL.toString()}
    image={new URL(image, Astro.site).toString()}
    datePublished={datePublished}
    dateModified={dateModified}
    serviceName={serviceName}
    priceRange={priceRange}
  />
  
  <!-- Resource hints for critical resources -->
  <link rel="modulepreload" href="/_astro/hoisted.*.js" as="script">

  <!-- Inline critical CSS for fastest first paint -->
  <style>
    /* Critical CSS - Above the fold styles */
    :root {
      --primary: #2563eb;
      --accent: #f59e0b;
      --foreground: #1f2937;
      --background: #ffffff;
    }
    body {
      margin: 0;
      font-family: 'Inter', system-ui, -apple-system, sans-serif;
      line-height: 1.5;
      color: var(--foreground);
    }
    .hero-section {
      min-height: 100vh;
      display: flex;
      align-items: center;
    }
    h1 {
      font-size: clamp(2.5rem, 5vw, 4.5rem);
      line-height: 1.2;
      margin: 0 0 1.5rem;
    }
    .btn-primary {
      background: var(--primary);
      color: white;
      padding: 0.75rem 1.5rem;
      border-radius: 0.5rem;
      text-decoration: none;
      display: inline-block;
    }
    /* Prevent layout shift */
    img { aspect-ratio: attr(width) / attr(height); }
  </style>

  <!-- Service Worker Registration -->
  <script>
    if ('serviceWorker' in navigator && window.location.hostname !== 'localhost') {
      window.addEventListener('load', () => {
        navigator.serviceWorker.register('/sw.js')
          .then(reg => console.log('SW registered'))
          .catch(err => console.log('SW registration failed'));
      });
    }
  </script>

  <!-- Minimal JS for interactions -->
  <script>
    // Mobile menu toggle
    document.addEventListener('DOMContentLoaded', () => {
      const menuBtn = document.getElementById('menu-btn');
      const mobileMenu = document.getElementById('mobile-menu');
      
      if (menuBtn && mobileMenu) {
        menuBtn.addEventListener('click', () => {
          mobileMenu.classList.toggle('active');
          menuBtn.setAttribute('aria-expanded', 
            menuBtn.getAttribute('aria-expanded') === 'true' ? 'false' : 'true'
          );
        });
      }
      
      // Intersection Observer for fade-ins
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
          }
        });
      }, { threshold: 0.1 });
      
      document.querySelectorAll('.fade-in').forEach(el => observer.observe(el));
      
      // Smooth scroll for anchor links
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', (e) => {
          e.preventDefault();
          const target = document.querySelector(anchor.getAttribute('href'));
          if (target) {
            target.scrollIntoView({ behavior: 'smooth', block: 'start' });
          }
        });
      });
    });
  </script>
  
  <!-- Defer Google Analytics to not block page load -->
  <script>
    // Load GA after page load for better performance
    if (typeof window !== 'undefined') {
      window.addEventListener('load', () => {
        const script = document.createElement('script');
        script.src = 'https://www.googletagmanager.com/gtag/js?id=G-LV8CDB9W9E';
        script.async = true;
        document.head.appendChild(script);

        script.onload = () => {
          window.dataLayer = window.dataLayer || [];
          function gtag(){dataLayer.push(arguments);}
          window.gtag = gtag;
          gtag('js', new Date());
          gtag('config', 'G-LV8CDB9W9E', {
            'page_path': window.location.pathname,
            'send_page_view': true
          });
        };
      });
    }
  </script>
  <!-- Inline non-critical styles (loaded async) -->
  <style set:html={globalStyles}></style>
  <style set:html={mobileStyles}></style>
  <style set:html={premiumStyles}></style>

  <!-- Performance Monitoring -->
  <PerfMonitor />
</head>
<body>
  <slot />
</body>
</html>